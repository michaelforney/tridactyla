# Copyright 2008 Michael Forney
# Distributed under the terms of the GNU General Public License v2
# Based in part upon 'eutils.eclass' from Gentoo, which is:
#     Copyright 1999-2008 Gentoo Foundation


# @FUNCTION: unpack_makeself
# @USAGE: [file to unpack] [offset] [tail|dd]
# @DESCRIPTION:
# Unpack those pesky makeself generated files ...
# They're shell scripts with the binary package tagged onto
# the end of the archive.  Loki utilized the format as does
# many other game companies.
#
# If the file is not specified, then ${ARCHIVES} is used.  If the
# offset is not specified then we will attempt to extract
# the proper offset from the script itself.
unpack_makeself() {
    local src_input=${1:-${ARCHIVES}}
    local src=$(find_unpackable_file "${src_input}")
    local skip=$2
    local exe=$3
    
    [[ -z ${src} ]] && die "Could not locate source for '${src_input}'"
    
    local shrtsrc=$(basename "${src}")
    echo ">>> Unpacking ${shrtsrc} to ${PWD}"
    if [[ -z ${skip} ]] ; then
        local ver=$(grep -a '#.*Makeself' "${src}" | awk '{print $NF}')
        local skip=0
        exe=tail
        case ${ver} in
        1.5.*|1.6.0-nv) # tested 1.5.{3,4,5} ... guessing 1.5.x series is same
        skip=$(grep -a ^skip= "${src}" | cut -d= -f2)
        ;;
        2.0|2.0.1)
        skip=$(grep -a ^$'\t'tail "${src}" | awk '{print $2}' | cut -b2-)
        ;;
        2.1.1)
        skip=$(grep -a ^offset= "${src}" | awk '{print $2}' | cut -b2-)
        let skip="skip + 1"
        ;;
        2.1.2)
        skip=$(grep -a ^offset= "${src}" | awk '{print $3}' | head -n 1)
        let skip="skip + 1"
        ;;
        2.1.3)
        skip=`grep -a ^offset= "${src}" | awk '{print $3}'`
        let skip="skip + 1"
        ;;
        2.1.4|2.1.5)
        skip=$(grep -a offset=.*head.*wc "${src}" | awk '{print $3}' | head -n 1)
        skip=$(head -n ${skip} "${src}" | wc -c)
        exe="dd"
        ;;
        *)
        eerror "I'm sorry, but I was unable to support the Makeself file."
        eerror "The version I detected was '${ver}'."
        eerror "Please file a bug about the file ${shrtsrc} at"
        eerror "http://bugs.gentoo.org/ so that support can be added."
        die "makeself version '${ver}' not supported"
        ;;
        esac
        elog "Detected Makeself version ${ver} ... using ${skip} as offset"
        fi
        case ${exe} in
        tail)   exe="tail -n +${skip} '${src}'";;
        dd)     exe="dd ibs=${skip} skip=1 obs=1024 conv=sync if='${src}'";;
        *)      die "makeself cant handle exe '${exe}'"
        esac
        
        # lets grab the first few bytes of the file to figure out what kind of archive it is
        local tmpfile=$(mktemp)
        eval ${exe} 2>/dev/null | head -c 512 > "${tmpfile}"
        local filetype=$(file -b "${tmpfile}")
        case ${filetype} in
        *tar\ archive*)
        eval ${exe} | tar --no-same-owner -xf -
        ;;
        bzip2*)
        eval ${exe} | bzip2 -dc | tar --no-same-owner -xf -
        ;;
        gzip*)
        eval ${exe} | tar --no-same-owner -xzf -
        ;;
        compress*)
        eval ${exe} | gunzip | tar --no-same-owner -xf -
        ;;
        *)
        eerror "Unknown filetype \"${filetype}\" ?"
        false
        ;;
        esac
        assert "failure unpacking (${filetype}) makeself ${shrtsrc} ('${ver}' +${skip})"
}

# for internal use only (unpack_pdv and unpack_makeself)
find_unpackable_file() {
    local src=$1
    if [[ -z ${src} ]] ; then
        src=${FETCHEDDIR}/${ARCHIVES}
    else
        if [[ -e ${FETCHEDDIR}/${src} ]] ; then
            src=${FETCHEDDIR}/${src}
        elif [[ -e ${PWD}/${src} ]] ; then
            src=${PWD}/${src}
        elif [[ -e ${src} ]] ; then
            src=${src}
        fi
    fi
    [[ ! -e ${src} ]] && return 1
    echo "${src}"
}